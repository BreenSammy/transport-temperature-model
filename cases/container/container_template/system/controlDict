/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2006                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     chtMultiRegionFoam;

startFrom       latestTime;

startTime       0.001;

stopAt          endTime;

endTime         0;

deltaT          0.05;

writeControl    adjustable;

writeInterval   3600;

purgeWrite      0;

writeFormat     ascii;

writePrecision  8;

writeCompression on;

timeFormat      general;

timePrecision   6;

runTimeModifiable yes;

maxCo           32;

// Maximum diffusion number
maxDi           10.0;

adjustTimeStep  yes;

functions
{
    wallHeatFlux
    {
      type        wallHeatFlux;
      libs        ("fieldFunctionObjects");
      region      airInside;
      qr          qr;
      executeControl  writeTime;
      executeInterval 1;
      writeControl    writeTime;
      writeInterval   1;
    }
    temperature_right
    {
      type            surfaceFieldValue;
      libs            ("fieldFunctionObjects");
      enabled         true;
      region          airInside;
      fields          (T);
      operation       areaAverage;
      regionType      patch;
      name            carrier;
      writeFields     false;
      executeControl  writeTime;
      executeInterval 1;
      writeControl    writeTime;
      writeInterval   1;
    }
    average_airInside
    {
      type            volFieldValue;
      libs            ("fieldFunctionObjects");
      // enabled         false;
      region          airInside;
      fields          (T);
      operation       volAverage;
      regionType      all;
      writeFields     false;
      executeControl  writeTime;
      executeInterval 1;
      writeControl    writeTime;
      writeInterval   1;
    }
    min_airInside
    {
      type            volFieldValue;
      libs            ("fieldFunctionObjects");
      // enabled         false;
      region          airInside;
      fields          (T);
      operation       min;
      regionType      all;
      writeFields     false;
      executeControl  writeTime;
      executeInterval 1;
      writeControl    writeTime;
      writeInterval   1;
    }
    max_airInside
    {
      type            volFieldValue;
      libs            ("fieldFunctionObjects");
      // enabled         false;
      region          airInside;
      fields          (T);
      operation       max;
      regionType      all;
      writeFields     false;
      executeControl  writeTime;
      executeInterval 1;
      writeControl    writeTime;
      writeInterval   1;
    }
    average_battery0_0
    {
      type            volFieldValue;
      libs            ("fieldFunctionObjects");
      // enabled         false;
      region          battery0_0;
      fields          (T);
      operation       volAverage;
      regionType      all;
      writeFields     false;
      executeControl  writeTime;
      executeInterval 1;
      writeControl    writeTime;
      writeInterval   1;
    }
    min_battery0_0
    {
      type            volFieldValue;
      libs            ("fieldFunctionObjects");
      // enabled         false;
      region          battery0_0;
      fields          (T);
      operation       min;
      regionType      all;
      writeFields     false;
      executeControl  writeTime;
      executeInterval 1;
      writeControl    writeTime;
      writeInterval   1;
    }
    max_battery0_0
    {
      type            volFieldValue;
      libs            ("fieldFunctionObjects");
      // enabled         false;
      region          battery0_0;
      fields          (T);
      operation       max;
      regionType      all;
      writeFields     false;
      executeControl  writeTime;
      executeInterval 1;
      writeControl    writeTime;
      writeInterval   1;
    }
    // //finds minimal and maximal Values in batteries region
    // minMaxValues
    // {
    //     type        fieldMinMax;
    //     libs        ("libfieldFunctionObjects.so");
    //     region      airOutside;
    //     write       false;
    //     fields      (T);
    // }

//     //controls simulation during runtime
//     runTimeControl
//     {
//         type        runTimeControl;
//         libs        ("libutilityFunctionObjects.so");
//         region      batteries;
//         conditions
//         {
//             // if minimal temperature exceeds value, simulation stops
//             minTempExceeded
//             {
//                 type            minMax;
//                 functionObject  minMaxValues;
//                 fields          (min(T));
//                 mode            maximum;
//                 value           272;
//             }
//         }
//     }

}

// ************************************************************************* //
