/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2006                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      changeDictionaryDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
boundary
{
    // container
    // {
    //     type        wall;
    // }
}


U
{
    internalField   uniform (0 0 0);

    boundaryField
    {
        container
        {
            type            noSlip;
        }
        bottom
        {
            type            noSlip;
        }
    }
}

T
{
    internalField   uniform 285;

    boundaryField
    {
        container
        {
            type            externalWallHeatFluxTemperature;
            mode            coefficient;
            Ta              285;
            h               2;
            kappaMethod     fluidThermo;
            qr              qr;
            value           $internalField;
        }
        // airInside_to_box
        // {
        //     type            compressible::turbulentTemperatureRadCoupledMixed;
        //     Tnbr            T;
        //     kappaMethod     fluidThermo;
        //     qrNbr           none;
        //     qr              qr;
        //     // thicknessLayers (0.002);
        //     // kappaLayers     (40);
        //     kappa           none;
        //     thermalInertia  true;
        //     value           $internalField;
        // }
        bottom
        {
            type               zeroGradient;
            // type            externalWallHeatFluxTemperature;
            // mode            coefficient;
            // Ta              uniform 300.0;
            // h               uniform 10e5;
            // kappaMethod     fluidThermo;
            // kappa           none;
            // thicknessLayers (1 2);
            // kappaLayers     (100 200);
            // value           uniform 300.0;
        }
    }
}

p_rgh
{
    internalField   uniform 1e5;

    boundaryField
    {
        container
        {
            type            fixedFluxPressure;
            value           $internalField;
        }
        bottom
        {
            type            fixedFluxPressure;
            value           $internalField;
        }
        // air
        // {
        //     type            totalPressure;
        //     p0              $internalField;
        //     value           $internalField;
        // }
        // symmetryPlanes
        // {
		// 	type            symmetry;
        // }
        // airInside_to_batterie0
        // {
        //     type    fixedFluxPressure;
        //     value   $internalField;
        // }
        // airInside_to_box
        // {
        //     type    fixedFluxPressure;
        //     value   $internalField;
        // }
        // airInside_to_boxes00
        // {
        //     type    fixedFluxPressure;
        //     value   $internalField;
        // }
    }
}

p
{
    internalField   uniform 1e5;

    boundaryField
    {
        // symmetryPlanes
        // {
		// 	type            symmetry;
        // }
        ".*"
        {
            type            calculated;
            value           $internalField;
        }
    }
}

// ************************************************************************* //
