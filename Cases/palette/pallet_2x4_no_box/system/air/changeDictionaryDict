/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2006                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      changeDictionaryDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

U
{
    internalField   uniform (0 0 0);

    boundaryField
    {
        air
        {
            type            pressureInletOutletVelocity;
            value           $internalField;
        }
        bottom
        {
            type            noSlip;
        }
        symmetryPlanes
        {
			type            symmetry;
        }
        air_to_battery0
        {
            type            noSlip;
        }
        air_to_battery1
        {
            type            noSlip;
        }
    }
}

T
{
    internalField   uniform 300;

    boundaryField
    {
        air
        {
			type            inletOutlet;
			inletValue      uniform 300;
			value           uniform 300;
        }
        bottom
        {
            type            zeroGradient;
        }
        symmetryPlanes
        {
			type            symmetry;
        }
        air_to_battery0
        {
            type            compressible::turbulentTemperatureCoupledBaffleMixed;
            Tnbr            T;
            // thicknessLayers (0.01);
            // kappaLayers     (0.5);
            // thermalInertia  true;
            kappaMethod     fluidThermo;
            value           $internalField;
        }
        air_to_battery1
        {
            type            compressible::turbulentTemperatureCoupledBaffleMixed;
            Tnbr            T;
            // thicknessLayers (0.01);
            // kappaLayers     (0.5);
            // thermalInertia  true;
            kappaMethod     fluidThermo;
            value           $internalField;
        }
    }
}

p_rgh
{
    internalField   uniform 1e5;

    boundaryField
    {
        bottom
        {
            type            fixedFluxPressure;
            value           $internalField;
        }
        air
        {
            type            totalPressure;
            p0              $internalField;
            value           $internalField;
        }
        symmetryPlanes
        {
			type            symmetry;
        }
        air_to_battery0
        {
            type    fixedFluxPressure;
            value   $internalField;
        }
        air_to_battery1
        {
            type    fixedFluxPressure;
            value   $internalField;
        }
    }
}

p
{
    internalField   uniform 1e5;

    boundaryField
    {
        symmetryPlanes
        {
			type            symmetry;
        }
        ".*"
        {
            type            calculated;
            value           $internalField;
        }
    }
}

// ************************************************************************* //
