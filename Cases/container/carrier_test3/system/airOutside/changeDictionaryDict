/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2006                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      changeDictionaryDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

boundary
{
    airOutside_to_airInside
    {
        // type        wall;
        inGroups    2(wall viewFactorWall);
    }
    bottom
    {
        type        wall;
        inGroups    2(wall viewFactorWall);
    }
}

U
{
    internalField   uniform (0 0 0);

    boundaryField
    {
        inlet
        {
            type            fixedValue;
            value           uniform (22.22 0 0);
        }
        outlet
        {
            type            inletOutlet;
            value           uniform (0 0 0);
            inletValue      uniform (0 0 0);
        }
        air
        {
            type            zeroGradient;
        }
        airOutside_to_airInside
        {
            type            noSlip;
        }
        airOutside_to_ground
        {
            type            noSlip;
        }
        trailer
        {
            type            noSlip;
        }
        lkw
        {
            type            noSlip;
        }
    }
}

T
{
    internalField   uniform 285;


    boundaryField
    {
        airOutside_to_airInside
        {
            type            compressible::turbulentTemperatureRadCoupledMixed;
            Tnbr            T;
            kappaMethod     fluidThermo;
            qrNbr           none;
            qr              qr;
            thicknessLayers (0.002);
            kappaLayers     (40);
            kappa           none;
            thermalInertia  true;
            value           $internalField;
        }
        air
        {
            type            inletOutlet;
            value           $internalField;
            inletValue      $internalField;
            // uniformValue   table 
            // (
            //     (0      285)
            //     (3600   284)
            //     (7200   283)
            //     (10800  282)
            //     (14400  281)
            //     (18000  280)
            //     (21600  281)
            //     (25200  283)
            //     (28800  284)
            //     (32400  285)
            //     (36000  287)
            //     (39600  289)
            //     (44200  291)
            //     (47800  294)
            //     (51400  297)
            //     (54000  296)
            //     (57600  292)
            //     (61200  289)
            //     (63800  287)
            //     (68400  286)
            //     (72000  286)
            //     (75600  286)
            //     (79200  286)
            //     (82800  286)
            // );
        }
        inlet
        {
            type    fixedValue;
            value   $internalField;
            // type            uniformFixedValue;
            // // value           $internalField;
            // // inletValue      $internalField;
            // uniformValue   table 
            // (
            //     (0      285)
            //     (3600   284)
            //     (7200   283)
            //     (10800  282)
            //     (14400  281)
            //     (18000  280)
            //     (21600  281)
            //     (25200  283)
            //     (28800  284)
            //     (32400  285)
            //     (36000  287)
            //     (39600  289)
            //     (44200  291)
            //     (47800  294)
            //     (51400  297)
            //     (54000  296)
            //     (57600  292)
            //     (61200  289)
            //     (63800  287)
            //     (68400  286)
            //     (72000  286)
            //     (75600  286)
            //     (79200  286)
            //     (82800  286)
            // );
        }
        outlet
        {
            type            zeroGradient;
            // // value           $internalField;
            // // inletValue      $internalField;
            // uniformValue   table 
            // (
            //     (0      285)
            //     (3600   284)
            //     (7200   283)
            //     (10800  282)
            //     (14400  281)
            //     (18000  280)
            //     (21600  281)
            //     (25200  283)
            //     (28800  284)
            //     (32400  285)
            //     (36000  287)
            //     (39600  289)
            //     (44200  291)
            //     (47800  294)
            //     (51400  297)
            //     (54000  296)
            //     (57600  292)
            //     (61200  289)
            //     (63800  287)
            //     (68400  286)
            //     (72000  286)
            //     (75600  286)
            //     (79200  286)
            //     (82800  286)
            // );
        }
        airOutside_to_ground
        {
            type            compressible::turbulentTemperatureRadCoupledMixed;
            Tnbr            T;
            kappaMethod     fluidThermo;
            qrNbr           none;
            qr              qr;
            kappa           none;
            thermalInertia  true;
            value           $internalField;
        }
        trailer
        {
            type            zeroGradient;
        }
        lkw
        {
            type            zeroGradient;
        }
    }
}

p_rgh
{
    internalField   uniform 1e5;

    boundaryField
    {
        inlet
        {
            type            fixedFluxPressure;
            value           $internalField;
        }
        outlet
        {
            type    fixedValue;
            value   uniform 1e5;          
        }
        air
        {
            type            fixedFluxPressure;
            value           $internalField;
        }
        airOutside_to_airInside
        {
            type            fixedFluxPressure;
            value           $internalField;
        }
        airOutside_to_ground
        {
            type            fixedFluxPressure;
            value           $internalField;
        }
        // air
        // {
        //     type            totalPressure;
        //     p0              $internalField;
        //     value           $internalField;
        // }
        // symmetryPlanes
        // {
		// 	type            symmetry;
        // }
        // airOutside_to_batterie0
        // {
        //     type    fixedFluxPressure;
        //     value   $internalField;
        // }
        trailer
        {
            type    fixedFluxPressure;
            value   $internalField;
        }
        lkw
        {
            type    fixedFluxPressure;
            value   $internalField;
        }
        bottom
        {
            type    fixedFluxPressure;
            value   $internalField;
        }
    }
}

p
{
    internalField   uniform 1e5;

    boundaryField
    {
        // symmetryPlanes
        // {
		// 	type            symmetry;
        // }
        outlet
        {
            // type    fixedValue;
            // value   uniform 0;
            type            calculated;
            value           $internalField;
        }
        ".*"
        {
            type            calculated;
            value           $internalField;
        }
    }
}

// ************************************************************************* //
