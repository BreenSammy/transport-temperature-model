/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2006                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1;

length    7; // 6.058
width	  1.92;  // 2.438 // 1.1925
height	  3.84;  // 2.591
negWidth  -1.92;
negLength -1; 

vertices
(
 ($length     $negWidth  0      ) // 0
 ($length     $width     0      ) // 1
 ($negLength  $width     0      ) // 2
 ($negLength  $negWidth  0      ) // 3
 ($length     $negWidth  $height) // 4
 ($length     $width     $height) // 5
 ($negLength  $width     $height) // 6
 ($negLength  $negWidth  $height) // 7

);

//block size 32x32x32cm

blocks
(
 hex (0 1 2 3 4 5 6 7) (6 12 6) simpleGrading (1 1 1)
//  (
//     //x-direction expansion ratio
//      (
//          (0.5 0.5 16)     //Division 1 (percantage of block length | percantage of total block cells | grading)
//          (0.5 0.5 0.0625) //Division 3
//      )
//     //y-direction expansion ratio
//     (
//     (0.5 0.5 16)     //Division 1 (percantage of block length | percantage of total block cells | grading)
//     (0.5 0.5 0.0625) //Division 3
//     )
//     //z-direction expansion ratio
//     (
//         (0.5 0.5 16)     //Division 1 (percantage of block length | percantage of total block cells | grading)
//         (0.5 0.5 0.0625) //Division 3
//     )
//  )
);
edges
(
);
patches
(
    patch air
    (
        (4 5 6 7)       
        (1 2 6 5)
        (0 1 5 4)
        (3 7 6 2)
		(0 4 7 3)
    )
    patch bottom
	(
		(0 3 2 1)
	)
	// symmetry symmetryPlanes
	// (
	// 	(3 7 6 2)
	// 	(0 4 7 3)
	// )
//  patch top
//  (
//  (4 5 6 7)
//  )
//  patch sideLeft
//  (
//  (0 4 7 3)
//  )
//  patch sideRight
//  (
//  (1 2 6 5)
//  )
//  patch front
//  (
//  (0 1 5 4)
//  )
//  patch back
//  (
//  (3 7 6 2)
//  )
);
mergePatchPairs
(
);
// ************************************************************************* //
