/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2006                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      changeDictionaryDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
boundary
{
    trailer
    {
        type        wall;
    }
}


U
{
    internalField   uniform (0 0 0);

    boundaryField
    {
        airInside_to_carrier
        {
            type            noSlip;
        }
    }
}

T
{
    internalField   uniform 285;

    boundaryField
    {
        // trailer
        // {
        //     type        zeroGradient;
        //     // type            externalWallHeatFluxTemperature;
        //     // mode            flux;
        //     // q               uniform 0; // [10W/m²]
        //     // kappaMethod fluidThermo;
        //     // value           $internalField;
        // }
        airInside_to_carrier
        {
            type            compressible::turbulentTemperatureRadCoupledMixed;
            Tnbr            T;
            kappaMethod     fluidThermo;
            qrNbr           none;
            qr              none;
            // thicknessLayers (0.002);
            // kappaLayers     (40);
            kappa           none;
            thermalInertia  true;
            value           $internalField;
            // type            externalWallHeatFluxTemperature;

            // // option 1
            // mode             coefficient;     // ambient temp. and htc
            // Ta               constant 300.0;
            // h                uniform 10.0;
    
            // // option 2
            // // mode             power; 
            // // Q                10;              // [10W]
    
            // // // option 3
            // // mode             flux;
            // // q                   uniform 10.0; // [10W/m²]
    
            // thicknessLayers (2);
            // kappaLayers     (0.5);

            // // qr = qr;

            // kappaMethod fluidThermo;
            // value           $internalField;
        }
    }
}

p_rgh
{
    internalField   uniform 1e5;

    boundaryField
    {
        // trailer
        // {
        //     type            fixedFluxPressure;
        //     value           $internalField;
        // }
        // air
        // {
        //     type            totalPressure;
        //     p0              $internalField;
        //     value           $internalField;
        // }
        // symmetryPlanes
        // {
		// 	type            symmetry;
        // }
        // airInside_to_batterie0
        // {
        //     type    fixedFluxPressure;
        //     value   $internalField;
        // }
        airInside_to_carrier
        {
            type    fixedFluxPressure;
            value   $internalField;
        }
        // airInside_to_boxes00
        // {
        //     type    fixedFluxPressure;
        //     value   $internalField;
        // }
    }
}

p
{
    internalField   uniform 1e5;

    boundaryField
    {
        // symmetryPlanes
        // {
		// 	type            symmetry;
        // }
        ".*"
        {
            type            calculated;
            value           $internalField;
        }
    }
}

// ************************************************************************* //
