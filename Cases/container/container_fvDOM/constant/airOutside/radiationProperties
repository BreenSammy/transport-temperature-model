/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2006                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      radiationProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

radiation       on;

radiationModel  fvDOM;


// Number of flow iterations per radiation iteration
// solverFreq 5;


// absorptionEmissionModel none;

// constantAbsorptionEmissionCoeffs
// {
//    absorptivity    absorptivity    [ m^-1 ]         0.5;
//    emissivity      emissivity      [ m^-1 ]         0.5;
//    E               E               [ kg m^-1 s^-3 ] 0;
// }

solarLoadCoeffs
{

    // Sun direction ray model. Give the sunDirection or calculated using the
    // (solar calculator)
    sunDirectionModel   sunDirTracking; //sunDirConstant
    //sunDirectionModel   sunDirConstant;
        // Time interval to update Sun position (sec)
        sunTrackingUpdateInterval 600;

        // sunDirection        (0 0 -1);

        localStandardMeridian   2;      // GMT offset (hours)
        startDay                233;    // day of the year
        startTime               9;     // time of the day (hours decimal)
        longitude               48.1448; // longitude (degrees)
        latitude                11.558; // latitude (degrees)


        // Grid orientation
        gridUp                  (0 0 1);
        gridEast                (1 0 0);

    // Energy spectrum
    spectralDistribution (1);
    // spectralDistribution   (0);

    // Solar model:

        // sunLoadConstant-sunLoadFairWeatherConditions-SunLoadTheoreticalMaximum;
        //  sunLoadModel sunLoadConstant;
        sunLoadModel sunLoadFairWeatherConditions;


        // Sun load constant model
        directSolarRad  1000;    // [w/m2]
        diffuseSolarRad 40;     // [w/m2]

        // // Fair Weather Conditions Model Constants.
        // Calculate beta from the Solar calculator or input
        A       1000;        // Apparent solar irradiation at air mass m = 0
        B       0.142;      // Atmospheric extinction coefficient
        // beta    45;         // Solar altitude (in degrees) above the horizontal

        // // Theoretical maximum model constants
        // Setrn       10;
        // SunPrime    1;

        // // Ground reflectivity
        groundReflectivity 0.2;

        // // Solar diffusivity constants
        C   0.058;  // Model constant

    // Radiative flux coupling flags
    solidCoupled    true;  //Couple through qr the solid regions (default true)
    wallCoupled     true; //Couple through qr wall patches (default false)

    // Reflecting rays
        useReflectedRays true;
        reflecting
        {
            nPhi        10;
            nTheta      10;
        }

    absorptionEmissionModel none;
    scatterModel            none;
    sootModel               none;

}



fvDOMCoeffs
{
    nPhi        2;          // azimuthal angles in PI/2 on X-Y.(from Y to X)
    nTheta      4;          // polar angles in PI (from Z to X-Y plane)
    tolerance 1e-3;   // convergence criteria for radiation iteration
    maxIter     10;         // maximum number of iterations
    useSolarLoad      true;
}


// viewFactorCoeffs
// {
//     smoothing true; //Smooth view factor matrix (use when in a close surface
//                     //to force Sum(Fij = 1)
//     constantEmissivity true; //constant emissivity on surfaces.

//     nBands    2;

//     useSolarLoad       false;
// }

// Number of flow iterations per radiation iteration
solverFreq 10;

absorptionEmissionModel none;

scatterModel    none;

sootModel       none;

// ************************************************************************* //
